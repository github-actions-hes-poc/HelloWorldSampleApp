name: "Deploying a CI/CD for .NET sample app in ASP.NET 4.7 using GitHub Actions and store artifacts in Amazon S3"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  ZIP_DOWNLOAD_LOCATION: ${{ vars.ZIP_DOWNLOAD_LOCATION }}
  UNZIPPED_FOLDER_NAME: ${{ vars.UNZIPPED_FOLDER_NAME }}
  DESTINATION: ${{ vars.DESTINATION }}
  IIS_FOLDER: ${{ vars.IIS_FOLDER }}
  
jobs:
      build:
           runs-on: windows-latest
           defaults:
             run:
               shell: cmd

           steps:
            - name: Checkout code repository
              uses: actions/checkout@v3
      
            - name: Setup MSBuild
              uses: microsoft/setup-msbuild@v1

            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1.0.5

            - name: Restore Packages
              run: nuget restore HelloWorldSampleApp.sln

            - name: Build solution
              run: msbuild HelloWorldSampleApp.sln /p:Configuration=Release /p:DeployOnBuild=true

            - name: Set AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Retrieve Commit SHA for the build
              shell: powershell
              run: |
                $output = git rev-parse --short=4 HEAD
                echo $output
                echo $output > commit_sha.txt
                
            - name: Upload artifacts to Amazon S3
              shell: powershell
              env:
                BUILD_PATH: ${{ vars.BUILD_PATH }}
              run: |
                aws s3 cp ${{ env.BUILD_PATH }} s3://${{ env.S3_BUCKET_NAME }}/web-app/
                aws s3 cp commit_sha.txt s3://${{ env.S3_BUCKET_NAME }}/web-app/
                
      deploy:
       needs: build
       runs-on: [ self-hosted, Windows, X64 ]
       defaults:
         run:
           shell: cmd
    
       steps:
           - name: Set AWS credentials
             uses: aws-actions/configure-aws-credentials@v1
             with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: ${{ secrets.AWS_REGION }}
               
           - name: To check if AWS CLI V2 is installed or not
             shell: powershell
             run: |
               if (-Not (Test-Path 'C:\Program Files\Amazon\AWSCLI\aws.exe')) {
                Write-Host "AWS CLI is not installed. Installing..."
                $awsCliInstallerUrl = "https://awscli.amazonaws.com/AWSCLIV2.msi"
                $awsCliInstallerPath = Join-Path $env:TEMP "AWSCLIV2.msi"
                Invoke-WebRequest -Uri $awsCliInstallerUrl -OutFile $awsCliInstallerPath
                Start-Process -Wait -FilePath "msiexec.exe" -ArgumentList "/i", $awsCliInstallerPath, "/quiet"
                } else {
                  Write-Host "AWS CLI is already installed."
                }
                
           - name: Check the AWS CLI version V2
             shell: cmd
             run: |
               cd C:\
               aws --version
               
           - name: Download the zip file from S3 to EC2 folder
             shell: powershell
             run: aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/web-app/HelloWorldSampleApp.zip ${{ env.ZIP_DOWNLOAD_LOCATION }}
                
           - name: Unzipping the Zip file
             shell: powershell
             run: Expand-Archive -Path ${{ env.ZIP_DOWNLOAD_LOCATION }}\HelloWorldSampleApp.zip -DestinationPath ${{ env.DESTINATION }}
        
           - name: Deploy to IIS Server
             shell: powershell
             env:
               COPY_LOCATION: ${{ vars.COPY_LOCATION }}
             run: |
               iisreset /stop
               Remove-Item ${{ env.IIS_FOLDER }}\*  -Recurse
               Copy-Item -Path ${{ env.COPY_LOCATION }}\* -Destination ${{ env.IIS_FOLDER }} -Recurse -Force
               iisreset /start
          
           - name: Download the Commit SHA file from S3 bucket to EC2 location and rename the artifacts file in S3 bucket
             shell: powershell
             run: |
              C:\"Program Files"\Amazon\AWSCLIV2\aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/web-app/commit_sha.txt C:\actions-runner\_work
              $output = cat C:\actions-runner\_work\commit_sha.txt
              C:\"Program Files"\Amazon\AWSCLIV2\aws s3 mv s3://${{ env.S3_BUCKET_NAME }}/web-app/HelloWorldSampleApp.zip s3://${{ env.S3_BUCKET_NAME }}/web-app/HelloWorldSampleApp-$output.zip
                
           - name: Delete the unzipped output folder & zipped file to allow new builds gracefully
             shell: powershell
             run: |
               Remove-Item ${{ env.DESTINATION }} -Recurse
               Remove-Item C:\actions-runner\_work\HelloWorldSampleApp.zip
            
           - name: Delete the Commit SHA file from S3 bucket and EC2 location 
             shell: powershell
             run: |
               C:\"Program Files"\Amazon\AWSCLIV2\aws s3 rm s3://${{ env.S3_BUCKET_NAME }}/web-app/commit_sha.txt    
               Remove-Item C:\actions-runner\_work\commit_sha.txt
